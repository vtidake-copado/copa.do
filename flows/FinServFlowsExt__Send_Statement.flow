<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Statement_Period_Is_Custom</name>
        <label>Statement Period Is Custom</label>
        <locationX>896</locationX>
        <locationY>154</locationY>
        <assignmentItems>
            <assignToReference>StatementPeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FromandToDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Service_Request</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Statement_Period_Is_Not_Custom</name>
        <label>Statement Period Is Not Custom</label>
        <locationX>901</locationX>
        <locationY>352</locationY>
        <assignmentItems>
            <assignToReference>StatementPeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Statement_period</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Service_Request</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>Billing_Address</name>
        <choiceText>{!BillingAddressTemplate}</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Billing Address</stringValue>
        </value>
    </choices>
    <choices>
        <name>Custom</name>
        <choiceText>Custom</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Custom</stringValue>
        </value>
    </choices>
    <choices>
        <name>Email</name>
        <choiceText>Email address</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>AccountRecord.PersonEmail</elementReference>
        </value>
    </choices>
    <choices>
        <name>Last_12_months</name>
        <choiceText>Last 12 months</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Last 12 months</stringValue>
        </value>
    </choices>
    <choices>
        <name>Last_3_months</name>
        <choiceText>Last 3 months</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Last 3 months</stringValue>
        </value>
    </choices>
    <choices>
        <name>Last_6_months</name>
        <choiceText>Last 6 months</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Last 6 months</stringValue>
        </value>
    </choices>
    <choices>
        <name>Shipping_Address</name>
        <choiceText>{!ShippingAddressTemplate}</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Shipping Address</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Check_Custom_Date_Selection</name>
        <label>Check Custom Date Selection</label>
        <locationX>21</locationX>
        <locationY>294</locationY>
        <defaultConnector>
            <targetReference>Get_Contact_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Custom_Period_is_not_Selected_and_Start_Date_is_Selected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Statement_period</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Custom</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Start_Date</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Period_is_not_Custom_Start_and_End_Date_Selected</targetReference>
            </connector>
            <label>Custom Period is not Selected and Start Date is Selected</label>
        </rules>
        <rules>
            <name>Custom_Period_is_not_Selected_and_End_Date_is_Selected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Statement_period</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Custom</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>End_Date</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Period_is_not_Custom_Start_and_End_Date_Selected</targetReference>
            </connector>
            <label>Custom Period is not Selected and End Date is Selected</label>
        </rules>
        <rules>
            <name>Custom_Period_is_Selected_and_Start_Date_is_not_Selected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Statement_period</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Custom</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Start_Date</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Period_is_Custom_Start_and_End_Date_are_not_Selected</targetReference>
            </connector>
            <label>Custom Period is Selected and Start Date is not Selected</label>
        </rules>
        <rules>
            <name>Custom_Period_is_Selected_and_End_Date_is_not_Selected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Statement_period</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Custom</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>End_Date</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Period_is_Custom_Start_and_End_Date_are_not_Selected</targetReference>
            </connector>
            <label>Custom Period is Selected and End Date is not Selected</label>
        </rules>
    </decisions>
    <decisions>
        <name>Statement_Period_Assignment</name>
        <label>Statement Period Assignment</label>
        <locationX>656</locationX>
        <locationY>253</locationY>
        <defaultConnector>
            <targetReference>Statement_Period_Is_Not_Custom</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>CustomDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Statement_period</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Custom</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Statement_Period_Is_Custom</targetReference>
            </connector>
            <label>CustomDate</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>AccountsList</name>
        <dataType>String</dataType>
        <displayField>FinServ__FinancialAccountNumber__c</displayField>
        <filterLogic>(1 OR 2 OR 3 OR 4) AND 5</filterLogic>
        <filters>
            <field>FinServ__FinancialAccountType__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Checking</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__FinancialAccountType__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Savings</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__FinancialAccountType__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Cash Management Account</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__FinancialAccountType__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Credit Card</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__PrimaryOwner__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>FinServ__FinancialAccount__c</object>
        <outputAssignments>
            <assignToReference>FinancialAccountNumber</assignToReference>
            <field>FinServ__FinancialAccountNumber__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>FinancialAccountId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <valueField>FinServ__FinancialAccountNumber__c</valueField>
    </dynamicChoiceSets>
    <formulas>
        <name>FromandToDate</name>
        <dataType>String</dataType>
        <expression>TEXT({!Start_Date}) &amp; &quot; to &quot; &amp; TEXT({!End_Date})</expression>
    </formulas>
    <interviewLabel>Send Statement Copy {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>Send Statement</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Account_Details</name>
        <label>Get Account Details</label>
        <locationX>497</locationX>
        <locationY>84</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Mode_of_Delivery</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputReference>AccountRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>PersonEmail</queriedFields>
        <queriedFields>BillingStreet</queriedFields>
        <queriedFields>ShippingStreet</queriedFields>
        <queriedFields>BillingCity</queriedFields>
        <queriedFields>ShippingCity</queriedFields>
        <queriedFields>BillingState</queriedFields>
        <queriedFields>ShippingState</queriedFields>
        <queriedFields>BillingCountry</queriedFields>
        <queriedFields>ShippingCountry</queriedFields>
        <queriedFields>BillingPostalCode</queriedFields>
        <queriedFields>ShippingPostalCode</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Contact_Id</name>
        <label>Get Contact Id</label>
        <locationX>329</locationX>
        <locationY>83</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account_Details</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>Contact</object>
        <outputAssignments>
            <assignToReference>ContactId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <screens>
        <name>Confirmation_Screen</name>
        <label>Confirmation Screen</label>
        <locationX>1294</locationX>
        <locationY>238</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Summary</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Summary&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ConfirmationText</name>
            <fieldText>Case Number: {!CaseNumber}
{!CaseDescription}</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>358</locationX>
        <locationY>255</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(194, 57, 52);&quot;&gt;An unexpected error occurred. Your Salesforce admin can help with that. {!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Financial_Account_Selection</name>
        <label>Financial Account Selection</label>
        <locationX>180</locationX>
        <locationY>84</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Check_Custom_Date_Selection</targetReference>
        </connector>
        <fields>
            <name>Account_Number</name>
            <choiceReferences>AccountsList</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Account Number</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Statement_period</name>
            <choiceReferences>Last_3_months</choiceReferences>
            <choiceReferences>Last_6_months</choiceReferences>
            <choiceReferences>Last_12_months</choiceReferences>
            <choiceReferences>Custom</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>Last_3_months</defaultSelectedChoiceReference>
            <fieldText>Statement period</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Start_Date</name>
            <dataType>Date</dataType>
            <fieldText>Start Date</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(194, 57, 52);&quot;&gt;Select a start date that&apos;s before the current date.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Start_Date}&lt;={!$Flow.CurrentDate}</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>End_Date</name>
            <dataType>Date</dataType>
            <fieldText>End Date</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(194, 57, 52);&quot;&gt;Select an end date that&apos;s after the start date.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>({!Start_Date}&lt;{!End_Date})</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Mode_of_Delivery</name>
        <label>Mode of Delivery</label>
        <locationX>653</locationX>
        <locationY>79</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Statement_Period_Assignment</targetReference>
        </connector>
        <fields>
            <name>Send_to</name>
            <choiceReferences>Billing_Address</choiceReferences>
            <choiceReferences>Shipping_Address</choiceReferences>
            <choiceReferences>Email</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>Billing_Address</defaultSelectedChoiceReference>
            <fieldText>Send to</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Period_is_Custom_Start_and_End_Date_are_not_Selected</name>
        <label>Period is Custom-Start and End Date are not Selected</label>
        <locationX>346</locationX>
        <locationY>653</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Financial_Account_Selection</targetReference>
        </connector>
        <fields>
            <name>Message2</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-family: Roboto, sans-serif; color: rgb(194, 57, 52);&quot;&gt;Select a valid date range.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Period_is_not_Custom_Start_and_End_Date_Selected</name>
        <label>Period is not Custom-Start and End Date Selected</label>
        <locationX>36</locationX>
        <locationY>645</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Financial_Account_Selection</targetReference>
        </connector>
        <fields>
            <name>Message1</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52); font-size: 12px; background-color: rgb(255, 255, 255);&quot;&gt;Start Date and End Date apply to custom date ranges. Remove the values from these fields and try again.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <startElementReference>Financial_Account_Selection</startElementReference>
    <status>Active</status>
    <subflows>
        <name>Create_Case_Gateway_Record</name>
        <label>Create Case Gateway Record</label>
        <locationX>1202</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>Confirmation_Screen</targetReference>
        </connector>
        <flowName>FinServFlowsExt__Subflow_Create_a_Case_Gateway_Request</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Payload</name>
            <value>
                <elementReference>Payload</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Create_Service_Request</name>
        <label>Create Service Request</label>
        <locationX>1108</locationX>
        <locationY>238</locationY>
        <connector>
            <targetReference>Create_Case_Gateway_Record</targetReference>
        </connector>
        <flowName>FinServFlowsExt__Subflow_Create_a_Service_Request</flowName>
        <inputAssignments>
            <name>CaseDescription</name>
            <value>
                <elementReference>CaseDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CaseStatus</name>
            <value>
                <elementReference>CaseStatus</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CaseSubject</name>
            <value>
                <stringValue>Send Statement</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ContactId</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>CaseId</assignToReference>
            <name>CaseId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>CaseNumber</assignToReference>
            <name>CaseNumber</name>
        </outputAssignments>
    </subflows>
    <textTemplates>
        <name>BillingAddressTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Billing address ({!AccountRecord.BillingStreet} {!AccountRecord.BillingCity} {!AccountRecord.BillingState} {!AccountRecord.BillingCountry} {!AccountRecord.BillingPostalCode})</text>
    </textTemplates>
    <textTemplates>
        <name>CaseDescription</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Service Flow Name: Send Statement
Account Number: {!FinancialAccountNumber}
Send to: {!Send_to}
Statement Period: {!StatementPeriod}</text>
    </textTemplates>
    <textTemplates>
        <name>Payload</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>{
  &quot;FlowName&quot;: &quot;Send Statement&quot;,
  &quot;ServiceRequestNumber&quot;: &quot;{!CaseNumber}&quot;,
  &quot;ServiceRequestId&quot;: &quot;{!CaseId}&quot;,
  &quot;AccountId&quot;: &quot;{!recordId}&quot;,
  &quot;FinancialAccountNumber&quot;: &quot;{!Account_Number}&quot;,
  &quot;FinancialAccountId&quot;: &quot;{!FinancialAccountId}&quot;,
  &quot;StatementDate&quot;: &quot;{!StatementPeriod}&quot;,
  &quot;Sendto&quot;: &quot;{!Send_to}&quot;
}</text>
    </textTemplates>
    <textTemplates>
        <name>ShippingAddressTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Shipping address ({!AccountRecord.ShippingStreet} {!AccountRecord.ShippingCity} {!AccountRecord.ShippingState} {!AccountRecord.ShippingCountry} {!AccountRecord.ShippingPostalCode})</text>
    </textTemplates>
    <variables>
        <name>AccountRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CaseNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CaseStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>New</stringValue>
        </value>
    </variables>
    <variables>
        <name>ContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ContactRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>FinancialAccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>FinancialAccountNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>StatementPeriod</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
