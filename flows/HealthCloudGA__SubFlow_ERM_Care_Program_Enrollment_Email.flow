<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>IsProductPresent</name>
        <label>IsProductPresent</label>
        <locationX>1000</locationX>
        <locationY>504</locationY>
        <actionName>HealthCloudGA__HcLPIProducts</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>If_Authorization_Type_Product_0</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>productIds</name>
            <value>
                <elementReference>cpp.ProductId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>HealthCloudGA__HcLPIProducts</nameSegment>
        <outputParameters>
            <assignToReference>isProductExist</assignToReference>
            <name>output</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>1739</locationX>
        <locationY>9</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EnrollmentEmailTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EnrollmentSubject</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>add_to_auth_list</name>
        <label>add to auth list</label>
        <locationX>284</locationX>
        <locationY>498</locationY>
        <assignmentItems>
            <assignToReference>nonAuthText</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>textTemplate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>nonAuthText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>- {!cpp.Product.Name}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Care_Program_Products</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Community_Link</name>
        <label>Assign Community Link</label>
        <locationX>734</locationX>
        <locationY>676</locationY>
        <assignmentItems>
            <assignToReference>Community_Link</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>To request the supplies or services youâ€™re eligible for, click this link: {!COMMUNITY_URL}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>If_Authorization_Type_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_total_products</name>
        <label>assign total products</label>
        <locationX>564</locationX>
        <locationY>106</locationY>
        <assignmentItems>
            <assignToReference>TotalProducts</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Care_Program_Products</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>If_No_element_exist</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AuthProductsEmail_Text</name>
        <label>AuthProductsEmailText</label>
        <locationX>1973</locationX>
        <locationY>119</locationY>
        <assignmentItems>
            <assignToReference>AuthProductsEmailText</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>As a part of this program, you are eligible for requesting:{!authText}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>nonAuthList2</name>
        <label>nonAuthList</label>
        <locationX>545</locationX>
        <locationY>320</locationY>
        <assignmentItems>
            <assignToReference>authText</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>textTemplate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>authText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>- {!cpp.Product.Name}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Care_Program_Products</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>NonAuthProductsEmail_Text_0</name>
        <label>NonAuthProductsEmailText</label>
        <locationX>1453</locationX>
        <locationY>111</locationY>
        <assignmentItems>
            <assignToReference>NonAuthProductsEmailText</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>You are also eligible for services mentioned below:{!nonAuthText}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>If_No_auth_Products</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>If_Authorization_Type_Product</name>
        <label>If Authorization Type Product</label>
        <locationX>537</locationX>
        <locationY>494</locationY>
        <defaultConnector>
            <targetReference>nonAuthList2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>iffound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isProductExist</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>add_to_auth_list</targetReference>
            </connector>
            <label>iffound</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_Authorization_Type_Product_0</name>
        <label>If Authorization Type Product</label>
        <locationX>783</locationX>
        <locationY>455</locationY>
        <defaultConnector>
            <targetReference>Assign_Community_Link</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>iffound_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isProductExist</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>nonAuthList2</targetReference>
            </connector>
            <label>iffound</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_Email_Address_Exists</name>
        <label>If Email Address Exists</label>
        <locationX>192</locationX>
        <locationY>107</locationY>
        <defaultConnector>
            <targetReference>Get_Care_Program_Products</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Email_Address_Exist</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>EmailAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>EmailAddress</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>leadName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>leadName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>If Email Address Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_No_auth_Products</name>
        <label>If No auth Products is Empty</label>
        <locationX>1734</locationX>
        <locationY>246</locationY>
        <defaultConnector>
            <targetReference>AuthProductsEmail_Text</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Auth_Products</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>authText</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>authText</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email</targetReference>
            </connector>
            <label>No Auth Products</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_No_auth_Products_0</name>
        <label>If auth Products are empty</label>
        <locationX>1241</locationX>
        <locationY>219</locationY>
        <defaultConnector>
            <targetReference>NonAuthProductsEmail_Text_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Products</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>nonAuthText</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>nonAuthText</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>If_No_auth_Products</targetReference>
            </connector>
            <label>No Products</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_No_element_exist</name>
        <label>If No element exist</label>
        <locationX>794</locationX>
        <locationY>13</locationY>
        <defaultConnector>
            <targetReference>Iterate_on_all_products</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_not_element</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TotalProducts</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email</targetReference>
            </connector>
            <label>If No element Exists</label>
        </rules>
    </decisions>
    <description>SubFlow : ERM Care Program Enrollment Email</description>
    <interviewLabel>SubFlow : ERM Care Program Enrollment Email {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>SubFlow : ERM Care Program Enrollment Email</label>
    <loops>
        <name>Iterate_on_all_products</name>
        <label>Iterate on all products</label>
        <locationX>997</locationX>
        <locationY>115</locationY>
        <assignNextValueToReference>cpp</assignNextValueToReference>
        <collectionReference>Get_Care_Program_Products</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsProductPresent</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>If_No_auth_Products_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Care_Program_Products</name>
        <label>Get Care Program Products</label>
        <locationX>408</locationX>
        <locationY>106</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assign_total_products</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CareProgramId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CareProgramId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsDeleted</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>CareProgramProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>105</locationY>
        <connector>
            <targetReference>If_Email_Address_Exists</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EnrollmentEmailTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Hello {!leadName},
This is a confirmation that you that you have enrolled in the Care Program.

{!AuthProductsEmailText}

{!NonAuthProductsEmailText}

{!Community_Link}

Thanks,
Care Coordinator</text>
    </textTemplates>
    <textTemplates>
        <name>textTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>{!emptyString}
{!emptyString}</text>
    </textTemplates>
    <variables>
        <name>auth</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>authItem</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AuthProductsEmailText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>authText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CareProgramId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>0ZeRM0000004C930AE</stringValue>
        </value>
    </variables>
    <variables>
        <name>Community_Link</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>COMMUNITY_URL</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>erm</stringValue>
        </value>
    </variables>
    <variables>
        <name>countOfProducts</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>CountOfRecords</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>cpp</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CareProgramProduct</objectType>
    </variables>
    <variables>
        <name>EmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>emptyString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>EnrollmentSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Care program enrollment confirmation</stringValue>
        </value>
    </variables>
    <variables>
        <name>found</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>isProductExist</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>leadName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>Ankit</stringValue>
        </value>
    </variables>
    <variables>
        <name>NonAuthProductsEmailText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>nonAuthText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ProductName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TotalProducts</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>ttLineBreak</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
