<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <constants>
        <description>Stores the Escalate Case fulfillment type.</description>
        <name>FulfillmentTypeEscalateCase</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Escalate Case</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the Reverse Fee fulfillment type.</description>
        <name>FulfillmentTypeReverseFee</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Reverse Fee</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines which fulfillment type the case owner&apos;s manager selected in the GetManagerInput step.</description>
        <name>WhichFulfillmentTypeManager</name>
        <label>Which Fulfillment Type?</label>
        <locationX>446</locationX>
        <locationY>611</locationY>
        <defaultConnectorLabel>Close Case (Default)</defaultConnectorLabel>
        <rules>
            <name>ReverseFeeManager</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ReviewTransactionDetailsManager.Outputs.finalFulfillmentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FulfillmentTypeReverseFee</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AttemptFeeReversalManager</targetReference>
            </connector>
            <label>Reverse Fee</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines which fulfillment type the case owner selected in the GetCaseOwnerInput step.</description>
        <name>WhichFulfillmentTypeOwner</name>
        <label>Which Fulfillment Type?</label>
        <locationX>446</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Close Case (Default)</defaultConnectorLabel>
        <rules>
            <name>ReverseFeeCaseOwner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ReviewTransactionDetailsCaseOwner.Outputs.finalFulfillmentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FulfillmentTypeReverseFee</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AttemptFeeReversalCaseOwner</targetReference>
            </connector>
            <label>Reverse Fee</label>
        </rules>
        <rules>
            <name>Case_Owner_Escalated_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ReviewTransactionDetailsCaseOwner.Outputs.finalFulfillmentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FulfillmentTypeEscalateCase</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetManagerInput</targetReference>
            </connector>
            <label>Escalate Case</label>
        </rules>
    </decisions>
    <description>Processes a fee reversal request with input from the case owner or case owner&apos;s manager.</description>
    <environments>Default</environments>
    <interviewLabel>Orchestrate Fee Reversal {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Orchestrate Fee Reversal</label>
    <orchestratedStages>
        <description>Tries to reverse the fee and displays the results to the case owner.</description>
        <name>AttemptFeeReversalCaseOwner</name>
        <label>Reverse Fee</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Calls an asynchronous action to process a fee reversal request from the case owner.</description>
            <name>CallFeeReversalApiCaseOwner</name>
            <actionName>serviceprocess__attempt_fee_reversal</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Attempt Fee Reversal</label>
            <requiresAsyncProcessing>true</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
        <stageSteps>
            <description>Displays the result of the attempted free reversal to the case owner.</description>
            <name>DisplayFeeReversalResultOwner</name>
            <actionName>serviceprocess__confirm_fee_reversal</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>FINS_Back_Office</stringValue>
                </assignee>
                <assigneeType>Queue</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <entryConditions>
                <leftValueReference>CallFeeReversalApiCaseOwner.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </entryConditions>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>asyncCalloutFailed</name>
                <value>
                    <elementReference>CallFeeReversalApiCaseOwner.Outputs.isFeeReversalFailed</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>responsePayload</name>
                <value>
                    <elementReference>CallFeeReversalApiCaseOwner.Outputs.platformEventPayload</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>svcCatalogRequestRecord</name>
                <value>
                    <elementReference>$Record</elementReference>
                </value>
            </inputParameters>
            <label>Display Fee Reversal Result</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Tries to reverse the fee and displays the results to the case owner&apos;s manager.</description>
        <name>AttemptFeeReversalManager</name>
        <label>Reverse Fee</label>
        <locationX>314</locationX>
        <locationY>719</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Calls an asynchronous action to process a fee reversal request from the case owner&apos;s manager.</description>
            <name>CallFeeReversalApiManager</name>
            <actionName>serviceprocess__attempt_fee_reversal</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Attempt Fee Reversal</label>
            <requiresAsyncProcessing>true</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
        <stageSteps>
            <description>Displays the result of the attempted free reversal to the case owner&apos;s manager.</description>
            <name>DisplayFeeReversalResultManager</name>
            <actionName>serviceprocess__confirm_fee_reversal</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>FINS_Back_Office</stringValue>
                </assignee>
                <assigneeType>Queue</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <entryConditions>
                <leftValueReference>CallFeeReversalApiManager.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </entryConditions>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>asyncCalloutFailed</name>
                <value>
                    <elementReference>CallFeeReversalApiManager.Outputs.isFeeReversalFailed</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>responsePayload</name>
                <value>
                    <elementReference>CallFeeReversalApiManager.Outputs.platformEventPayload</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>svcCatalogRequestRecord</name>
                <value>
                    <elementReference>$Record</elementReference>
                </value>
            </inputParameters>
            <label>Display Fee Reversal Result</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Collects information from the case owner about the free reversal request that triggered the orchestration..</description>
        <name>GetCaseOwnerInput</name>
        <label>Get Case Owner Input</label>
        <locationX>446</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>WhichFulfillmentTypeOwner</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Allows a case owner to review transaction details for the fee reversal request. The case owner can approve a fee reversal, escalate the case, or close the case without reversing the fee.</description>
            <name>ReviewTransactionDetailsCaseOwner</name>
            <actionName>serviceprocess__review_fee_reversal</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>FINS_Back_Office</stringValue>
                </assignee>
                <assigneeType>Queue</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>caseEscalated</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>serviceCatalogRequest</name>
                <value>
                    <elementReference>$Record</elementReference>
                </value>
            </inputParameters>
            <label>Review Transaction Details</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Collects information from the case owner&apos;s manager about the free reversal request that triggered the orchestration..</description>
        <name>GetManagerInput</name>
        <label>Get Manager Input</label>
        <locationX>446</locationX>
        <locationY>503</locationY>
        <connector>
            <targetReference>WhichFulfillmentTypeManager</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Allows a case owner&apos;s manager to review transaction details for the escalated fee reversal request. The manager can approve a fee reversal or close the case without reversing the fee.</description>
            <name>ReviewTransactionDetailsManager</name>
            <actionName>serviceprocess__review_fee_reversal</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>FINS_Back_Office</stringValue>
                </assignee>
                <assigneeType>Queue</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>caseEscalated</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>serviceCatalogRequest</name>
                <value>
                    <elementReference>$Record</elementReference>
                </value>
            </inputParameters>
            <label>Review Transaction Details</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <sourceTemplate>serviceprocess__fsc_fee_reversal_flow</sourceTemplate>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetCaseOwnerInput</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SvcCatalogItemDefinitionId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0j2B0000000CaUsIAK</stringValue>
            </value>
        </filters>
        <object>SvcCatalogRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
